/**
 * 
 * */

var fs = require('fs');

// Configurations
var confs = {
	rootPckg: 'var icons',
	suffix: '',
	dir: 'd:/Desarrollo/HiT/Repository/homeintouch/public/img/svg',
	output: 'd:/Desarrollo/HiT/Repository/homeintouch/client/vendor/compiled-svg-icons.js'
};

function endsWith(str, suffix) {
    return str.indexOf(suffix, str.length - suffix.length) !== -1;
}

function extractTemplatesFromDir (root, tmps) {
	
	// Gets all the files from the dir
	var files = fs.readdirSync(root);

	files.forEach( function (file) {
		var path = root + '/' + file;
		var stats = fs.lstatSync(path);
		
		// If is a directory, creates the map to allocate the child templates
		if (stats.isDirectory()) {

			// Adds ignored folder names HERE!
			if (file !== '.svn') {
				tmps[file] = {}; // Creates the new entry package (corresponding to a folder)
				extractTemplatesFromDir(path, tmps[file]);
			}
		
		// If the file is an svg, extracts the template
		} else if ( endsWith(file, '.svg') ) {
			
			var markup = '';
			var tmpName = file.replace(/.svg/ig, confs.suffix);
			
			// Extracts the svg template
			var lines = fs.readFileSync(path).toString().split('\n');
			for (i in lines) {
				if (markup.length > 0 && markup.charAt(markup.length -1) != '>')
					markup += ' ';
				markup += lines[i].trim(); // Removes the spaces
    		}

    		// Removes the svg comments & Escapes the simple quotes ' => \'
    		markup = markup.replace(/<!--[\s\S]*?-->/g, '').replace(/"/g, "'");

			tmps[tmpName] = markup; // Adds the markup to the json object
		}
	});
}

function compile(dir) {

	if (fs.existsSync(dir)) { // If the dir exists

		// Deletes previous compiled file if exists
		if (fs.existsSync(confs.output)) {
			fs.unlinkSync(confs.output);
		}
		
		var templates = {};
		extractTemplatesFromDir(dir, templates);

		var compiled = confs.rootPckg + '=' + JSON.stringify(templates) + ';';
		compiled = "/** File generated by compile-templates.js on date " + new Date() + " */\n" + compiled;

		// Writes the file
		fs.writeFile(confs.output, compiled, function(err) {
		    if(err) {
		        console.error(err);
		    } else {
		        console.log('The templates were successfuly compilated in the file: ' + confs.output);
		    }
		}); 

	} else {
		console.error('ERROR: The directory ' + dir + ' does not exists!!!');
	}
}

compile(confs.dir);